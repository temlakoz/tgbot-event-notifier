from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.methods import SetMyCommands, DeleteMyCommands
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove

from app.filters.is_admin import IsAdmin, IsAdminCallback
from app.keyboard import admin as keyboard
from app.scheduler.notifier import send_message_weekly
from app.states.admin import AddForm, DelForm, MailingForm
from app.utils.debug import debug_callback_handler, debug_message_handler
from config import db, bot, chat_id_for_mailing

router = Router()

start_photo_id = "AgACAgIAAxkBAANPZderBzAy2deITswzveoVkRD-fz8AAoHUMRsAAUrBSrc4wYIPmxTAAQADAgADeQADNAQ"
products_photo_id = "AgACAgIAAxkBAANSZderGfEQh2ITg_pd4iFT1_8tU7QAAoLUMRsAAUrBSk9pUK99eRc6AQADAgADeQADNAQ"


# –ö–æ–º–∞–Ω–¥–∞ /start
@router.message(CommandStart(), IsAdmin())
@debug_message_handler
async def start(message: Message, state: FSMContext):
    await state.clear()
    await message.answer("‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                         "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CTF-Notifier –±–æ—Ç\n"
                         "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                         "–í—ã –≤–æ—à–ª–∏ –∫–∞–∫  üíº –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
                         reply_markup=keyboard.main)


# –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –±—É–¥—É—â–∏—Ö —Å–æ–±—ã—Ç–∏–π
@router.message(F.text == keyboard.view_events_button_text, IsAdmin())
@debug_message_handler
async def view_events(message: Message, state: FSMContext):
    await state.clear()
    events = db.get_current_events()
    if events:
        text = "üçª –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è:\n\n"
        i = 1
        for event in events:
            event_id, name, event_date = event
            text += f"{i}. <b>{name}</b>  |  {event_date}\n"
            i += 1
    else:
        text = "‚ûñ –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"

    await message.answer(text=text, reply_markup=keyboard.main,
                         parse_mode="HTML")


# –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
@router.message(F.text == keyboard.add_event_button_text, IsAdmin())
@debug_message_handler
async def add_event(message: Message, state: FSMContext):
    await state.set_state(AddForm.name)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∏–º—è —Å–æ–±—ã—Ç–∏—è", reply_markup=keyboard.cancel)


@router.message(F.text != keyboard.cancel_button_text, IsAdmin(), AddForm.name)
@debug_message_handler
async def add_event_name(message: Message, state: FSMContext):
    await state.set_state(AddForm.date)
    await state.update_data(name=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î-–ú–ú-–ì–ì–ì–ì",
                         reply_markup=keyboard.cancel)


@router.message(F.text != keyboard.cancel_button_text, IsAdmin(), AddForm.date)
@debug_message_handler
async def add_event_date(message: Message, state: FSMContext):
    name = (await state.get_data())['name']
    date = message.text

    db.add_event(name=name, event_date_str=date)
    await message.answer("–°–æ–±—ã—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!",
                         reply_markup=keyboard.main)


# –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
@router.message(F.text == keyboard.del_event_button_text, IsAdmin())
@debug_message_handler
async def del_event(message: Message, state: FSMContext):
    await state.set_state(DelForm.num)
    events = db.get_current_events()
    if events:
        await state.update_data(events=events)
        text = "üçª –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è:\n\n"
        i = 1
        for event in events:
            event_id, name, event_date = event
            text += f"{i}. <b>{name}</b>  |  {event_date}\n"
            i += 1
    else:
        text = "‚ûñ –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"

    await message.answer(text=text, reply_markup=keyboard.get_del_events_ikb(),
                         parse_mode="HTML")


@router.callback_query(IsAdminCallback(), DelForm.num)
@debug_callback_handler
async def del_event(callback_query: CallbackQuery, state: FSMContext):
    await bot.delete_message(chat_id=callback_query.from_user.id,
                             message_id=callback_query.message.message_id)
    if callback_query.data == "cancel":
        await bot.send_message(chat_id=callback_query.from_user.id,
                               text="üîÆ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                               reply_markup=keyboard.main)
    else:
        events = (await state.get_data())["events"]
        num = callback_query.data[0]
        event_id, event_name, event_date = events[int(num)-1]
        db.delete_event(event_id=event_id)
        text = f"–°–æ–±—ã—Ç–∏–µ {event_name}  |  {event_date} —É–¥–∞–ª–µ–Ω–æ"
        await bot.send_message(chat_id=callback_query.from_user.id,
                               text=text,
                               reply_markup=keyboard.main)
        await state.clear()


# –ö–Ω–æ–ø–∫–∞ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏
@router.message(F.text == keyboard.mailing_button_text, IsAdmin())
async def mailing(message: Message, state: FSMContext):
    await state.set_state(MailingForm.confirm)
    await message.answer("–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ä–∞—Å—Å—ã–ª–∫—É?", reply_markup=keyboard.mailing_ikb)


@router.callback_query(IsAdminCallback(), MailingForm.confirm)
@debug_callback_handler
async def mailing_confirm(callback_query: CallbackQuery, state: FSMContext):
    await state.clear()
    callback_data = callback_query.data
    await bot.delete_message(chat_id=callback_query.from_user.id,
                             message_id=callback_query.message.message_id)
    if callback_data == "yes":
        await send_message_weekly(bot=bot, mailing=True)
        text = "üì§ –†–∞—Å—Å—ã–ª–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ"
        await bot.send_message(chat_id=callback_query.from_user.id, text=text,
                               reply_markup=keyboard.main)
    else:
        await bot.send_message(chat_id=callback_query.from_user.id,
                               text="üîÆ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=keyboard.main)


# –ö–Ω–æ–ø–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
@router.message(F.text == keyboard.power_change_button_text, IsAdmin())
@debug_message_handler
async def powerchange(message: Message, state: FSMContext):
    await state.clear()
    power_state = db.get_notifier_state()
    if power_state:
        db.set_notifier_state(False)
        await message.answer("–†–∞—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞ –Ω–∞ –∫–∞–∂–¥—ã–π —á–µ—Ç–≤–µ—Ä–≥ 12:00 –ø–æ –ú–°–ö", reply_markup=keyboard.main)
    else:
        db.set_notifier_state(True)
        await message.answer("–†–∞—Å—Å—ã–ª–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞", reply_markup=keyboard.main)


# –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–æ–ø–∞–≤—à–µ–µ –≤ –¥—Ä—É–≥–∏–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã
@router.message(IsAdmin())
@debug_message_handler
async def any_text(message: Message, state: FSMContext):
    await state.clear()
    if message.chat.id != chat_id_for_mailing:
        await message.answer(text="üîÆ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=keyboard.main)
    else:
        # await bot.send_message(chat_id=message.chat.id, text="markup delete test", reply_markup=ReplyKeyboardRemove())
        await message.answer(text="markup delete test", reply_markup=ReplyKeyboardRemove())
